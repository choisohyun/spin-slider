{"version":3,"file":"index.esm.js","sources":["../src/hooks/useSwipe.ts","../src/utils/carousel.ts","../src/styles/index.ts","../src/components/SpinSliderPagination.tsx","../src/components/SpinSliderItem.tsx","../src/components/SpinSlider.tsx","../src/index.ts"],"sourcesContent":["import { useRef, TouchEvent, MouseEvent, KeyboardEvent } from 'react';\n\nimport { UseSwipeOptions, UseSwipeReturn } from '../types';\n\n/**\n * 터치, 마우스, 키보드 스와이프 기능을 제공하는 훅\n */\nexport const useSwipe = ({ onSwipeLeft, onSwipeRight, minSwipeDistance = 50 }: UseSwipeOptions): UseSwipeReturn => {\n  const startRef = useRef<{ x: number; y: number } | null>(null);\n  const isMouseDownRef = useRef(false);\n  const wasSwipedRef = useRef(false);\n\n  /**\n   * 시작점과 현재점의 차이를 계산합니다.\n   */\n  const getDelta = (x: number, y: number) => {\n    if (!startRef.current) {\n      return { deltaX: 0, deltaY: 0 };\n    }\n    return {\n      deltaX: x - startRef.current.x,\n      deltaY: y - startRef.current.y,\n    };\n  };\n\n  /**\n   * 스와이프 방향을 판단하고 적절한 핸들러를 호출합니다.\n   */\n  const handleSwipe = (deltaX: number) => {\n    if (Math.abs(deltaX) <= minSwipeDistance) {\n      return;\n    }\n    wasSwipedRef.current = true;\n    if (deltaX < 0) {\n      onSwipeLeft();\n    } else {\n      onSwipeRight();\n    }\n  };\n\n  /**\n   * 터치 시작 핸들러\n   */\n  const handleTouchStart = (e: TouchEvent) => {\n    const touch = e.touches[0];\n    startRef.current = { x: touch.clientX, y: touch.clientY };\n  };\n\n  /**\n   * 터치 종료 핸들러\n   */\n  const handleTouchEnd = (e: TouchEvent) => {\n    if (!startRef.current) return;\n    const touch = e.changedTouches[0];\n    const { deltaX } = getDelta(touch.clientX, touch.clientY);\n    handleSwipe(deltaX);\n    startRef.current = null;\n  };\n\n  /**\n   * 마우스 다운 핸들러\n   */\n  const handleMouseDown = (e: MouseEvent) => {\n    isMouseDownRef.current = true;\n    startRef.current = { x: e.clientX, y: e.clientY };\n  };\n\n  /**\n   * 마우스 업 핸들러\n   */\n  const handleMouseUp = (e: MouseEvent) => {\n    if (!isMouseDownRef.current || !startRef.current) {\n      isMouseDownRef.current = false;\n      startRef.current = null;\n      return;\n    }\n    const { deltaX } = getDelta(e.clientX, e.clientY);\n    handleSwipe(deltaX);\n    isMouseDownRef.current = false;\n    startRef.current = null;\n  };\n\n  /**\n   * 마우스 리브 핸들러\n   */\n  const handleMouseLeave = () => {\n    isMouseDownRef.current = false;\n    startRef.current = null;\n  };\n\n  /**\n   * 키보드 다운 핸들러\n   */\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'ArrowLeft') {\n      onSwipeRight();\n    } else if (e.key === 'ArrowRight') {\n      onSwipeLeft();\n    }\n  };\n\n  return {\n    handleTouchStart,\n    handleTouchEnd,\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseLeave,\n    handleKeyDown,\n    isMouseDown: isMouseDownRef.current,\n    wasSwipedRef,\n  };\n};\n","/**\n * 페이지네이션에서 보여줄 페이지들을 계산합니다.\n * @param totalPages 전체 페이지 수\n * @param currentPage 현재 페이지\n * @param maxVisible 최대 표시할 페이지 수\n * @returns 표시할 페이지 인덱스 배열\n */\nexport const getVisiblePages = (totalPages: number, currentPage: number, maxVisible: number): number[] => {\n  if (totalPages <= maxVisible) {\n    return Array.from({ length: totalPages }, (_, i) => i);\n  }\n\n  const half = Math.floor(maxVisible / 2);\n  const start = Math.max(0, Math.min(currentPage - half, totalPages - maxVisible));\n  const end = Math.min(start + maxVisible - 1, totalPages - 1);\n\n  return Array.from({ length: end - start + 1 }, (_, i) => start + i);\n};\n\n/**\n * 렌더링할 아이템의 범위를 계산합니다.\n * @param currentIndex 현재 인덱스\n * @param visibleCount 보여줄 아이템 개수\n * @param totalItems 전체 아이템 개수\n * @param overscanMultiplier 오버스캔 배수\n * @returns 렌더링할 시작과 끝 인덱스\n */\nexport function getRenderRange(\n  currentIndex: number,\n  visibleCount: number,\n  totalItems: number,\n  overscanMultiplier = 1,\n): { startIndex: number; endIndex: number } {\n  const overscan = visibleCount * overscanMultiplier;\n  const startIndex = Math.max(0, currentIndex - overscan);\n  const endIndex = Math.min(totalItems, currentIndex + visibleCount + overscan);\n  return { startIndex, endIndex };\n}\n\n/**\n * 다음 인덱스를 계산합니다.\n * @param currentIndex 현재 인덱스\n * @param visibleCount 보여줄 아이템 개수\n * @param totalItems 전체 아이템 개수\n * @param infinite 무한 루프 여부\n * @returns 다음 인덱스\n */\nexport const getNextIndex = (\n  currentIndex: number,\n  visibleCount: number,\n  totalItems: number,\n  infinite = false,\n): number => {\n  if (infinite) {\n    return (currentIndex + visibleCount) % totalItems;\n  }\n  return Math.min(totalItems - visibleCount, currentIndex + visibleCount);\n};\n\n/**\n * 이전 인덱스를 계산합니다.\n * @param currentIndex 현재 인덱스\n * @param visibleCount 보여줄 아이템 개수\n * @param totalItems 전체 아이템 개수\n * @param infinite 무한 루프 여부\n * @returns 이전 인덱스\n */\nexport const getPreviousIndex = (\n  currentIndex: number,\n  visibleCount: number,\n  totalItems: number,\n  infinite = false,\n): number => {\n  if (infinite) {\n    return currentIndex === 0 ? totalItems - visibleCount : Math.max(0, currentIndex - visibleCount);\n  }\n  return Math.max(0, currentIndex - visibleCount);\n};\n\n/**\n * 인덱스가 유효한지 확인합니다.\n * @param index 확인할 인덱스\n * @param visibleCount 보여줄 아이템 개수\n * @param totalItems 전체 아이템 개수\n * @returns 유효한 인덱스인지 여부\n */\nexport const isValidIndex = (index: number, visibleCount: number, totalItems: number): boolean => {\n  return index >= 0 && index <= totalItems - visibleCount;\n};\n\n/**\n * 현재 페이지를 계산합니다.\n * @param currentIndex 현재 인덱스\n * @param visibleCount 보여줄 아이템 개수\n * @returns 현재 페이지\n */\nexport const getCurrentPage = (currentIndex: number, visibleCount: number): number => {\n  return Math.floor(currentIndex / visibleCount);\n};\n\n/**\n * 전체 페이지 수를 계산합니다.\n * @param totalItems 전체 아이템 개수\n * @param visibleCount 보여줄 아이템 개수\n * @returns 전체 페이지 수\n */\nexport const getTotalPages = (totalItems: number, visibleCount: number): number => {\n  return Math.ceil(totalItems / visibleCount);\n};\n","import styled from 'styled-components';\n\nimport { SpinSliderStyles } from '../types';\n\n// CSS 변수 기본값\nconst defaultStyles: Required<SpinSliderStyles> = {\n  trackTransition: 'transform 0.3s ease-in-out',\n  buttonSize: 40,\n  paginationDotSize: 32,\n  buttonBackground: 'rgba(255, 255, 255, 0.9)',\n  buttonColor: '#333',\n  activePaginationColor: '#007bff',\n  inactivePaginationColor: '#ddd',\n};\n\nexport const SpinSliderWrapper = styled.div<{ userSelect?: string }>`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  ${({ userSelect }) => userSelect && `user-select: ${userSelect};`}\n`;\n\nexport const SpinSliderTrack = styled.ul<{\n  $translateX: number;\n  $transitionDuration?: number;\n}>`\n  display: flex;\n  transition: ${({ $transitionDuration }) =>\n    $transitionDuration ? `transform ${$transitionDuration}ms ease-in-out` : defaultStyles.trackTransition};\n  width: fit-content;\n  transform: translateX(${({ $translateX }) => $translateX}px);\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const SpinSliderItemWrapper = styled.li<{\n  width: number;\n  sidePeek?: number;\n}>`\n  flex: 0 0 ${({ width }) => width}px;\n  padding: 0 ${({ sidePeek }) => sidePeek ?? 8}px;\n  box-sizing: border-box;\n`;\n\nexport const SpinSliderButton = styled.button<{\n  $position: 'left' | 'right';\n  $styles?: SpinSliderStyles;\n}>`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  ${({ $position }) => $position}: 10px;\n  z-index: 2;\n\n  width: ${({ $styles }) => $styles?.buttonSize ?? defaultStyles.buttonSize}px;\n  height: ${({ $styles }) => $styles?.buttonSize ?? defaultStyles.buttonSize}px;\n  border-radius: 50%;\n  border: none;\n  background: ${({ $styles }) => $styles?.buttonBackground ?? defaultStyles.buttonBackground};\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  color: ${({ $styles }) => $styles?.buttonColor ?? defaultStyles.buttonColor};\n  cursor: pointer;\n\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    transform: translateY(-50%) scale(1.05);\n  }\n\n  &:active {\n    transform: translateY(-50%) scale(0.95);\n  }\n\n  @media (max-width: 768px) {\n    width: 32px;\n    height: 32px;\n    font-size: 16px;\n    ${({ $position }) => $position}: 5px;\n  }\n`;\n\nexport const SpinSliderPaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  gap: 4px;\n\n  span {\n    color: #222;\n    font-size: 14px;\n    font-weight: bold;\n    padding: 0 4px;\n    user-select: none;\n\n    @media (max-width: 768px) {\n      font-size: 12px;\n      padding: 0 2px;\n    }\n  }\n`;\n\nexport const PaginationDot = styled.button<{\n  $active: boolean;\n  $styles?: SpinSliderStyles;\n}>`\n  min-width: ${({ $styles }) => $styles?.paginationDotSize ?? defaultStyles.paginationDotSize}px;\n  min-height: ${({ $styles }) => $styles?.paginationDotSize ?? defaultStyles.paginationDotSize}px;\n  width: ${({ $styles }) => $styles?.paginationDotSize ?? defaultStyles.paginationDotSize}px;\n  height: ${({ $styles }) => $styles?.paginationDotSize ?? defaultStyles.paginationDotSize}px;\n  background: transparent;\n  border: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  outline: none;\n  -webkit-tap-highlight-color: transparent;\n\n  &::after {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: ${({ $active, $styles }) =>\n      $active\n        ? ($styles?.activePaginationColor ?? defaultStyles.activePaginationColor)\n        : ($styles?.inactivePaginationColor ?? defaultStyles.inactivePaginationColor)};\n    transition: all 0.2s ease;\n  }\n\n  &:hover::after {\n    background: ${({ $active }) => ($active ? '#0056b3' : '#bbb')};\n    transform: scale(1.1);\n  }\n\n  &:active::after {\n    transform: scale(0.9);\n  }\n\n  @media (max-width: 768px) {\n    min-width: 28px;\n    min-height: 28px;\n    width: 28px;\n    height: 28px;\n    &::after {\n      width: 10px;\n      height: 10px;\n    }\n  }\n`;\n","import { SpinSliderPaginationProps } from '../types';\nimport { SpinSliderPaginationWrapper, PaginationDot } from '../styles';\nimport { getVisiblePages, getCurrentPage, getTotalPages } from '../utils/carousel';\n\n/**\n * SpinSlider의 페이지네이션 컴포넌트\n */\nexport const SpinSliderPagination = ({\n  itemsLength,\n  visibleCount,\n  currentIndex,\n  setCurrentIndex,\n  maxVisible = 7,\n  styles,\n  accessibility,\n}: SpinSliderPaginationProps) => {\n  const totalPages = getTotalPages(itemsLength, visibleCount);\n  const currentPage = getCurrentPage(currentIndex, visibleCount);\n\n  const visiblePages = getVisiblePages(totalPages, currentPage, maxVisible);\n\n  const goToPage = (pageIndex: number) => {\n    const newIndex = pageIndex * visibleCount;\n    setCurrentIndex(Math.min(newIndex, itemsLength - visibleCount));\n  };\n\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  return (\n    <SpinSliderPaginationWrapper role=\"tablist\" aria-label={accessibility?.paginationLabel || '페이지네이션'}>\n      {visiblePages[0] > 0 && (\n        <>\n          <PaginationDot\n            $active={false}\n            $styles={styles}\n            onClick={() => goToPage(0)}\n            aria-label={\n              accessibility?.paginationLabel ? `${accessibility.paginationLabel} 첫 페이지로 이동` : '첫 페이지로 이동'\n            }\n            role=\"tab\"\n          />\n          {visiblePages[0] > 1 && <span>...</span>}\n        </>\n      )}\n\n      {visiblePages.map(pageIndex => (\n        <PaginationDot\n          key={pageIndex}\n          $active={pageIndex === currentPage}\n          $styles={styles}\n          onClick={() => goToPage(pageIndex)}\n          aria-label={\n            accessibility?.paginationLabel\n              ? `${accessibility.paginationLabel} ${pageIndex + 1}페이지로 이동`\n              : `${pageIndex + 1}페이지로 이동`\n          }\n          role=\"tab\"\n          aria-selected={pageIndex === currentPage}\n        />\n      ))}\n\n      {visiblePages[visiblePages.length - 1] < totalPages - 1 && (\n        <>\n          {visiblePages[visiblePages.length - 1] < totalPages - 2 && <span>...</span>}\n          <PaginationDot\n            $active={false}\n            $styles={styles}\n            onClick={() => goToPage(totalPages - 1)}\n            aria-label={\n              accessibility?.paginationLabel\n                ? `${accessibility.paginationLabel} 마지막 페이지로 이동`\n                : '마지막 페이지로 이동'\n            }\n            role=\"tab\"\n          />\n        </>\n      )}\n    </SpinSliderPaginationWrapper>\n  );\n};\n","import { SpinSliderItemProps } from '../types';\nimport { SpinSliderItemWrapper } from '../styles';\n\n/**\n * SpinSlider의 개별 아이템 컴포넌트\n */\nexport const SpinSliderItem = <T,>({\n  item,\n  index,\n  width,\n  sidePeek,\n  currentIndex,\n  totalItems,\n  wasSwipedRef,\n  onClick,\n  renderItem,\n}: SpinSliderItemProps<T>) => {\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (wasSwipedRef.current) {\n      e.preventDefault();\n      (wasSwipedRef as React.MutableRefObject<boolean>).current = false;\n      return;\n    }\n    onClick?.(item, index);\n  };\n\n  return (\n    <SpinSliderItemWrapper\n      width={width}\n      sidePeek={sidePeek}\n      aria-roledescription=\"carousel item\"\n      aria-label={`carousel item ${index + 1} of ${totalItems}`}\n      aria-current={currentIndex === index ? 'true' : 'false'}\n      onClick={handleClick}\n    >\n      {renderItem(item, index)}\n    </SpinSliderItemWrapper>\n  );\n};\n","import { useState, useMemo, useEffect, useRef } from 'react';\n\nimport { SpinSliderProps } from '../types';\nimport { useSwipe } from '../hooks/useSwipe';\nimport { getRenderRange, getNextIndex, getPreviousIndex } from '../utils/carousel';\nimport { SpinSliderWrapper, SpinSliderTrack, SpinSliderButton } from '../styles';\n\nimport { SpinSliderPagination } from './SpinSliderPagination';\nimport { SpinSliderItem } from './SpinSliderItem';\n\n/**\n * 메인 SpinSlider 컴포넌트\n */\nexport const SpinSlider = <T,>({\n  items,\n  renderItem,\n  visibleCount = 1,\n  sidePeek = 32,\n  autoPlay = false,\n  autoPlayInterval = 3000,\n  infinite = false,\n  showPagination = true,\n  showNavigation = true,\n  minSwipeDistance = 50,\n  transitionDuration,\n  initialIndex = 0,\n  styles,\n  callbacks,\n  accessibility,\n  className,\n}: SpinSliderProps<T>) => {\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n  const [viewportWidth, setViewportWidth] = useState(0);\n  const autoPlayRef = useRef<NodeJS.Timeout | null>(null);\n\n  // 뷰포트 너비 계산\n  useEffect(() => {\n    const updateViewportWidth = () => {\n      setViewportWidth(window.innerWidth);\n    };\n\n    updateViewportWidth();\n    window.addEventListener('resize', updateViewportWidth);\n    return () => window.removeEventListener('resize', updateViewportWidth);\n  }, []);\n\n  // 자동 재생\n  useEffect(() => {\n    if (!autoPlay || items.length <= visibleCount) return;\n\n    const startAutoPlay = () => {\n      autoPlayRef.current = setInterval(() => {\n        setCurrentIndex(prev => getNextIndex(prev, visibleCount, items.length, infinite));\n      }, autoPlayInterval);\n      callbacks?.onAutoPlayStart?.();\n    };\n\n    const stopAutoPlay = () => {\n      if (autoPlayRef.current) {\n        clearInterval(autoPlayRef.current);\n        autoPlayRef.current = null;\n        callbacks?.onAutoPlayStop?.();\n      }\n    };\n\n    startAutoPlay();\n\n    return stopAutoPlay;\n  }, [autoPlay, autoPlayInterval, items.length, visibleCount, infinite, callbacks]);\n\n  // 계산된 값들\n  const visibleAreaWidth = useMemo(() => viewportWidth - sidePeek * 2, [viewportWidth, sidePeek]);\n  const itemWidth = useMemo(() => visibleAreaWidth / visibleCount, [visibleAreaWidth, visibleCount]);\n  const translateX = useMemo(() => -(itemWidth * currentIndex) + sidePeek, [itemWidth, currentIndex, sidePeek]);\n\n  const totalItems = items.length;\n\n  const { startIndex, endIndex } = useMemo(\n    () => getRenderRange(currentIndex, visibleCount, totalItems),\n    [currentIndex, visibleCount, totalItems],\n  );\n\n  // 네비게이션 핸들러\n  const goToPrevious = () => {\n    const newIndex = getPreviousIndex(currentIndex, visibleCount, totalItems, infinite);\n    setCurrentIndex(newIndex);\n    callbacks?.onSlideChange?.(newIndex);\n  };\n\n  const goToNext = () => {\n    const newIndex = getNextIndex(currentIndex, visibleCount, totalItems, infinite);\n    setCurrentIndex(newIndex);\n    callbacks?.onSlideChange?.(newIndex);\n  };\n\n  // 스와이프 핸들러\n  const {\n    handleTouchStart,\n    handleTouchEnd,\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseLeave,\n    handleKeyDown,\n    isMouseDown,\n    wasSwipedRef,\n  } = useSwipe({\n    onSwipeLeft: goToNext,\n    onSwipeRight: goToPrevious,\n    minSwipeDistance,\n  });\n\n  // 아이템 클릭 핸들러\n  const handleItemClick = (item: T, index: number) => {\n    callbacks?.onItemClick?.(item, index);\n  };\n\n  // 인덱스 변경 핸들러\n  const handleIndexChange = (newIndex: number) => {\n    setCurrentIndex(newIndex);\n    callbacks?.onSlideChange?.(newIndex);\n  };\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  return (\n    <SpinSliderWrapper\n      className={className}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      onKeyDown={handleKeyDown}\n      tabIndex={isMouseDown ? -1 : 0}\n      userSelect={isMouseDown ? 'none' : undefined}\n      role=\"region\"\n      aria-roledescription=\"carousel\"\n      aria-label={accessibility?.label || '슬라이더'}\n    >\n      {showNavigation && (\n        <>\n          <SpinSliderButton\n            $position=\"left\"\n            $styles={styles}\n            onClick={goToPrevious}\n            aria-label={accessibility?.previousButtonLabel || '이전 슬라이드'}\n          >\n            &#8249;\n          </SpinSliderButton>\n          <SpinSliderButton\n            $position=\"right\"\n            $styles={styles}\n            onClick={goToNext}\n            aria-label={accessibility?.nextButtonLabel || '다음 슬라이드'}\n          >\n            &#8250;\n          </SpinSliderButton>\n        </>\n      )}\n\n      <SpinSliderTrack $translateX={translateX} $transitionDuration={transitionDuration}>\n        {startIndex > 0 && <li style={{ width: startIndex * itemWidth, flexShrink: 0 }} />}\n        {items.slice(startIndex, endIndex).map((item, i) => {\n          const index = startIndex + i;\n          return (\n            <SpinSliderItem\n              key={index}\n              item={item}\n              index={index}\n              width={itemWidth}\n              sidePeek={sidePeek}\n              currentIndex={currentIndex}\n              totalItems={totalItems}\n              wasSwipedRef={wasSwipedRef}\n              onClick={handleItemClick}\n              renderItem={renderItem}\n            />\n          );\n        })}\n        {endIndex < totalItems && <li style={{ width: (totalItems - endIndex) * itemWidth, flexShrink: 0 }} />}\n      </SpinSliderTrack>\n\n      {showPagination && (\n        <SpinSliderPagination\n          itemsLength={items.length}\n          visibleCount={visibleCount}\n          currentIndex={currentIndex}\n          setCurrentIndex={handleIndexChange}\n          maxVisible={10}\n          styles={styles}\n          accessibility={accessibility}\n        />\n      )}\n    </SpinSliderWrapper>\n  );\n};\n","// 메인 컴포넌트\nexport { SpinSlider } from './components/SpinSlider';\nexport { SpinSliderItem } from './components/SpinSliderItem';\nexport { SpinSliderPagination } from './components/SpinSliderPagination';\n\n// 훅\nexport { useSwipe } from './hooks/useSwipe';\n\n// 유틸리티\nexport {\n  getVisiblePages,\n  getRenderRange,\n  getNextIndex,\n  getPreviousIndex,\n  isValidIndex,\n  getCurrentPage,\n  getTotalPages,\n} from './utils/carousel';\n\n// 타입\nexport type {\n  SpinSliderProps,\n  SpinSliderItemProps,\n  SpinSliderPaginationProps,\n  SpinSliderStyles,\n  SpinSliderCallbacks,\n  SpinSliderAccessibility,\n  UseSwipeOptions,\n  UseSwipeReturn,\n} from './types';\n\n// 기본 export\nimport { SpinSlider } from './components/SpinSlider';\nexport default SpinSlider;\n"],"names":["_jsxs","_Fragment","_jsx"],"mappings":"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"}